image: my-base-image:latest  # Replace with a suitable base image for your project

stages:
  - security
  - code-quality
  - build
  - test
  - deploy

# Security Scan with Snyk
snyk-scan:
  stage: security
  image: snyk/snyk-cli:latest
  script:
    - snyk test
  # Fail the pipeline if critical vulnerabilities found (optional)
  allow_failure: false  # Adjust based on your risk tolerance

# Code Quality with SonarQube
sonar-scan:
  stage: code-quality
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - sonar-scanner -Dsonar.projectKey=my-project -Dsonar.sources=.
  # Require code quality gates to pass before proceeding (optional)
  only:
    - master

# Build Stage (replace placeholders with your actual build commands)
build-job:
  stage: build
  script:
    - echo "Compiling the code..."
    - # Your actual build commands here  (make sure they are within the list)
    - echo "Compile complete."

# Test Stage (replace placeholders with your actual test commands)
unit-test-job:
  stage: test
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - # Your actual unit test commands here
    - echo "Code coverage is 90%"

lint-test-job:
  stage: test
  script:
    - echo "Linting code... This will take about 10 seconds."
    - # Your actual linting commands here
    - echo "No lint issues found."

# Deploy Stage (replace placeholders with your actual deployment commands)
deploy-job:
  stage: deploy
  environment: production
  script:
    - echo "Deploying application..."
    - # Your actual deployment commands here
    - echo "Application successfully deployed."

# Error Monitoring with Sentry (add commands to deploy Sentry releases)
sentry-deploy:
  stage: deploy
  script:
    - ...  # Commands to deploy Sentry releases
